{"version":3,"sources":["Services/Auth/HttpClient.ts","Constants/constants.ts","Services/Auth/AuthService.ts","Components/LoginForm.tsx","App.tsx","assets/bgi.jpg"],"names":["HttpClient","baseURL","_initializeResponseInterceptor","instance","interceptors","response","use","_handleResponse","_handleError","data","error","Promise","reject","this","axios","create","constants","AuthService","getUsers","get","getUser","id","email","password","post","identifier","then","a","async","console","log","LoginForm","state","authService","style","width","className","View","placeholder","onChange","setState","secureTextEntry","height","title","TouchableOpacity","Component","App","ImageBackground","source","require","alignItems","justifyContent","flex","module","exports"],"mappings":"0UAMsBA,EAAtB,KAGE,WAAmBC,GAAkB,IAAD,wBAQ5BC,+BAAiC,WACvC,EAAKC,SAASC,aAAaC,SAASC,IAClC,EAAKC,gBACL,EAAKC,eAX2B,KAe5BD,gBAAkB,qBAAGE,MAfO,KAiB1BD,aAAe,SAACE,GAAD,OAAgBC,QAAQC,OAAOF,IAhBtDG,KAAKV,SAAWW,IAAMC,OAAO,CAC3Bd,YAGFY,KAAKX,oCCdIc,EACU,wB,mbCIFC,E,gCAGjB,aAAsB,IAAD,sBACjB,cAAMD,IAGDE,SAAW,kBAAM,EAAKf,SAASgB,IAAY,WAJ/B,EAMZC,QAAU,SAACC,GAAD,OAAgB,EAAKlB,SAASgB,IAAd,UAAkCE,IANhD,E,qDAUrB,SAAkCC,EAAcC,GAM5C,OALAV,KAAKV,SAASqB,KAAK,cAAc,CAACC,WAAaH,EAAQC,SAAWA,IAAWG,MAAM,SAAOjB,GAAP,SAAAkB,EAAAC,OAAA,kEAAAD,EAAA,MACtElB,GADsE,kCAE3EoB,QAAQC,IAAIrB,GAF+D,+DAK5E,M,GAnB0BT,G,2bCcpB+B,E,gCAMnB,WAAYC,GAAwB,IAAD,sBACjC,cAAMA,IAHRC,YAA2B,IAAIhB,EAI7B,EAAKe,MAAQ,CACXV,MAAO,GACPC,SAAU,IAJqB,E,kCAQnC,WACE,OACE,cAAC,mBAAD,UACE,iCACEW,MAAO,CAAEC,MAAO,KAChBC,UAAU,2GAFZ,uBAIE,kCAAMA,UAAU,YAAhB,wBACE,iCAAMA,UAAU,oDAAhB,mCAGA,eAACC,EAAA,EAAD,WACE,iCAAMD,UAAU,kEAAhB,sCAGA,iCACEA,UAAU,kNACVE,YAAY,mBACZC,SAAU1B,KAAK2B,UAAS,SAAClB,OAH3B,mBAQF,eAACe,EAAA,EAAD,WACE,iCAAMD,UAAU,kEAAhB,yCAGA,cAACC,EAAA,EAAD,UACE,iCACEI,iBAAiB,EACjBL,UAAU,kNAFZ,qBAMJ,cAACC,EAAA,EAAD,CAAMH,MAAO,CAAEQ,OAAQ,MACvB,iCACEC,MAAM,QACNP,UAAU,8NAFZ,gBAIA,iCAAMA,UAAU,uDAAhB,uBACE,cAACQ,EAAA,EAAD,UACE,iCAAMR,UAAU,mDAAhB,yD,GAvDuBS,a,klOChBlBC,E,0HACnB,WACE,OACE,cAACC,EAAA,EAAD,CACEC,OAAQC,EAAQ,KAChBf,MAAO,CAAEC,MAAO,OAAQO,OAAQ,QAFlC,SAIE,cAACL,EAAA,EAAD,CACEH,MAAO,CACLgB,WAAY,SACZC,eAAgB,SAChBC,KAAM,GAJV,SAOE,cAAC,EAAD,Y,GAduBP,c,0DCHjCQ,EAAOC,QAAU,IAA0B,kC","file":"static/js/app.7dbf1ee8.chunk.js","sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\r\n\r\ndeclare module 'axios' {\r\n  interface AxiosResponse<T = any> extends Promise<T> {}\r\n}\r\n\r\nexport abstract class HttpClient {\r\n  protected readonly instance: AxiosInstance;\r\n\r\n  public constructor(baseURL: string) {\r\n    this.instance = axios.create({\r\n      baseURL,\r\n    });\r\n\r\n    this._initializeResponseInterceptor();\r\n  }\r\n\r\n  private _initializeResponseInterceptor = () => {\r\n    this.instance.interceptors.response.use(\r\n      this._handleResponse,\r\n      this._handleError,\r\n    );\r\n  };\r\n\r\n  private _handleResponse = ({ data }: AxiosResponse) => data;\r\n\r\n  protected _handleError = (error: any) => Promise.reject(error);\r\n}","export const constants = {\r\n    backendApiAdress : \"https://coder.tn/api/\"\r\n}","\r\nimport axios, { AxiosInstance } from 'axios';\r\nimport { HttpClient } from './HttpClient';\r\nimport { constants } from '../../Constants/constants';\r\n\r\nexport default class AuthService extends HttpClient{\r\n\r\n    \r\n    public constructor() {\r\n        super(constants.backendApiAdress);\r\n      }\r\n    \r\n      public getUsers = () => this.instance.get<User[]>('/users');\r\n      \r\n      public getUser = (id: string) => this.instance.get<User>(`/users/${id}`);\r\n\r\n    \r\n\r\n    public  loginWithEmailAndPassword(email:string, password: string) {\r\n        this.instance.post('/auth/local',{identifier : email , password : password}).then( async (data)=> {\r\n            if(await data){\r\n                console.log(data)\r\n            }\r\n        })\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface User {\r\n    username : string;\r\n    email : string;\r\n    token : string;\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  TextInput,\r\n  Touchable,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { TailwindProvider } from \"tailwindcss-react-native\";\r\nimport AuthService from \"../Services/Auth/AuthService\";\r\n\r\ntype LoginFormProps = {};\r\n\r\ntype LoginFormState = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport default class LoginForm extends Component<\r\n  LoginFormProps,\r\n  LoginFormState\r\n> {\r\n  authService: AuthService = new AuthService();\r\n\r\n  constructor(state: LoginFormState) {\r\n    super(state);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TailwindProvider>\r\n        <View\r\n          style={{ width: 350 }}\r\n          className=\"bg-white rounded-lg border border-gray-200 shadow-md sm:p-6 lg:p-8 dark:bg-gray-800 dark:border-gray-700\"\r\n        >\r\n          <View className=\"space-y-6\">\r\n            <Text className=\"text-xl font-medium text-gray-900 dark:text-white\">\r\n              Sign in\r\n            </Text>\r\n            <View>\r\n              <Text className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\r\n                Your email\r\n              </Text>\r\n              <TextInput\r\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                placeholder=\"name@company.com\"\r\n                onChange={this.setState((email) => {\r\n                  email: email;\r\n                })}\r\n              />\r\n            </View>\r\n            <View>\r\n              <Text className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\r\n                Your password\r\n              </Text>\r\n              <View>\r\n                <TextInput\r\n                  secureTextEntry={true}\r\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white\"\r\n                />\r\n              </View>\r\n            </View>\r\n            <View style={{ height: 20 }}></View>\r\n            <Button\r\n              title=\"Login\"\r\n              className=\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n            />\r\n            <View className=\"text-sm font-medium text-gray-500 dark:text-gray-300\">\r\n              <TouchableOpacity>\r\n                <Text className=\"text-blue-700 hover:underline dark:text-blue-500\">\r\n                  Create account\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </TailwindProvider>\r\n    );\r\n  }\r\n}\r\n","import { Component, ReactNode } from \"react\";\nimport { ImageBackground, View } from \"react-native\";\nimport LoginForm from \"./Components/LoginForm\";\nexport default class App extends Component {\n  render(): ReactNode {\n    return (\n      <ImageBackground\n        source={require(\"./assets/bgi.jpg\")}\n        style={{ width: \"100%\", height: \"100%\" }}\n      >\n        <View\n          style={{\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flex: 1,\n          }}\n        >\n          <LoginForm />\n        </View>\n      </ImageBackground>\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/bgi.0fedae0c.jpg\";"],"sourceRoot":""}